<?xml version="1.0"?>
<doc>
    <assembly>
        <name>YamlDotNet.RepresentationModel</name>
    </assembly>
    <members>
        <member name="T:YamlDotNet.RepresentationModel.Serialization.DeserializationOptions">
            <summary>
            Contains additional parameters thatr control the deserialization process.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.DeserializationOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:YamlDotNet.RepresentationModel.Serialization.DeserializationOptions"/> class.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.DeserializationOptions.#ctor(System.Collections.Generic.IEnumerable{YamlDotNet.RepresentationModel.Serialization.DeserializationOverride},System.Collections.Generic.IDictionary{System.String,System.Type})">
            <summary>
            Initializes a new instance of the <see cref="T:YamlDotNet.RepresentationModel.Serialization.DeserializationOptions"/> class.
            </summary>
            <param name="overrides">The overrides.</param>
            <param name="mappings">The mappings.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.DeserializationOptions.#ctor(System.Collections.Generic.IDictionary{System.Type,System.Collections.Generic.Dictionary{System.String,System.Action{System.Object,YamlDotNet.Core.EventReader}}},System.Collections.Generic.IDictionary{System.String,System.Type})">
            <summary>
            Initializes a new instance of the <see cref="T:YamlDotNet.RepresentationModel.Serialization.DeserializationOptions"/> class.
            </summary>
            <param name="overrides">The overrides.</param>
            <param name="mappings">The mappings.</param>
        </member>
        <member name="P:YamlDotNet.RepresentationModel.Serialization.DeserializationOptions.Overrides">
            <summary>
            Gets or sets the overrides.
            </summary>
            <value>The overrides.</value>
        </member>
        <member name="P:YamlDotNet.RepresentationModel.Serialization.DeserializationOptions.Mappings">
            <summary>
            Gets the mappings.
            </summary>
            <value>The mappings.</value>
        </member>
        <member name="T:YamlDotNet.RepresentationModel.YamlScalarNode">
            <summary>
            Represents a scalar node in the YAML document.
            </summary>
        </member>
        <member name="T:YamlDotNet.RepresentationModel.YamlNode">
            <summary>
            Represents a single node in the YAML document.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlNode.Load(YamlDotNet.Core.Events.NodeEvent,YamlDotNet.RepresentationModel.DocumentLoadingState)">
            <summary>
            Loads the specified event.
            </summary>
            <param name="yamlEvent">The event.</param>
            <param name="state">The state of the document.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlNode.ParseNode(YamlDotNet.Core.EventReader,YamlDotNet.RepresentationModel.DocumentLoadingState)">
            <summary>
            Parses the node represented by the next event in <paramref name="events" />.
            </summary>
            <param name="events">The events.</param>
            <param name="state">The state.</param>
            <returns>Returns the node that has been parsed.</returns>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlNode.ResolveAliases(YamlDotNet.RepresentationModel.DocumentLoadingState)">
            <summary>
            Resolves the aliases that could not be resolved when the node was created.
            </summary>
            <param name="state">The state of the document.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlNode.Save(YamlDotNet.Core.Emitter,YamlDotNet.RepresentationModel.EmitterState)">
            <summary>
            Saves the current node to the specified emitter.
            </summary>
            <param name="emitter">The emitter where the node is to be saved.</param>
            <param name="state">The state.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlNode.Emit(YamlDotNet.Core.Emitter,YamlDotNet.RepresentationModel.EmitterState)">
            <summary>
            Saves the current node to the specified emitter.
            </summary>
            <param name="emitter">The emitter where the node is to be saved.</param>
            <param name="state">The state.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlNode.Accept(YamlDotNet.RepresentationModel.IYamlVisitor)">
            <summary>
            Accepts the specified visitor by calling the appropriate Visit method on it.
            </summary>
            <param name="visitor">
            A <see cref="T:YamlDotNet.RepresentationModel.IYamlVisitor"/>.
            </param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlNode.Equals(YamlDotNet.RepresentationModel.YamlNode)">
            <summary>
            Provides a basic implementation of Object.Equals 
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlNode.SafeEquals(System.Object,System.Object)">
            <summary>
            Gets a value indicating whether two objects are equal.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlNode.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlNode.GetHashCode(System.Object)">
            <summary>
            Gets the hash code of the specified object, or zero if the object is null. 
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlNode.CombineHashCodes(System.Int32,System.Int32)">
            <summary>
            Combines two hash codes into one. 
            </summary>
        </member>
        <member name="P:YamlDotNet.RepresentationModel.YamlNode.Anchor">
            <summary>
            Gets or sets the anchor of the node.
            </summary>
            <value>The anchor.</value>
        </member>
        <member name="P:YamlDotNet.RepresentationModel.YamlNode.Tag">
            <summary>
            Gets or sets the tag of the node.
            </summary>
            <value>The tag.</value>
        </member>
        <member name="P:YamlDotNet.RepresentationModel.YamlNode.Start">
            <summary>
            Gets the position in the input stream where the event that originated the node starts.
            </summary>
        </member>
        <member name="P:YamlDotNet.RepresentationModel.YamlNode.End">
            <summary>
            Gets the position in the input stream where the event that originated the node ends.
            </summary>
        </member>
        <member name="P:YamlDotNet.RepresentationModel.YamlNode.AllNodes">
            <summary>
            Gets all nodes from the document, starting on the current node.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlScalarNode.#ctor(YamlDotNet.Core.EventReader,YamlDotNet.RepresentationModel.DocumentLoadingState)">
            <summary>
            Initializes a new instance of the <see cref="T:YamlDotNet.RepresentationModel.YamlScalarNode"/> class.
            </summary>
            <param name="events">The events.</param>
            <param name="state">The state.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlScalarNode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:YamlDotNet.RepresentationModel.YamlScalarNode"/> class.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlScalarNode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:YamlDotNet.RepresentationModel.YamlScalarNode"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlScalarNode.ResolveAliases(YamlDotNet.RepresentationModel.DocumentLoadingState)">
            <summary>
            Resolves the aliases that could not be resolved when the node was created.
            </summary>
            <param name="state">The state of the document.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlScalarNode.Emit(YamlDotNet.Core.Emitter,YamlDotNet.RepresentationModel.EmitterState)">
            <summary>
            Saves the current node to the specified emitter.
            </summary>
            <param name="emitter">The emitter where the node is to be saved.</param>
            <param name="state">The state.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlScalarNode.Accept(YamlDotNet.RepresentationModel.IYamlVisitor)">
            <summary>
            Accepts the specified visitor by calling the appropriate Visit method on it.
            </summary>
            <param name="visitor">
            A <see cref="T:YamlDotNet.RepresentationModel.IYamlVisitor"/>.
            </param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlScalarNode.Equals(System.Object)">
            <summary />
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlScalarNode.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlScalarNode.op_Implicit(System.String)~YamlDotNet.RepresentationModel.YamlScalarNode">
            <summary>
            Performs an implicit conversion from <see cref="T:System.String"/> to <see cref="T:YamlDotNet.RepresentationModel.YamlScalarNode"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlScalarNode.op_Explicit(YamlDotNet.RepresentationModel.YamlScalarNode)~System.String">
            <summary>
            Performs an explicit conversion from <see cref="T:YamlDotNet.RepresentationModel.YamlScalarNode"/> to <see cref="T:System.String"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlScalarNode.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:YamlDotNet.RepresentationModel.YamlScalarNode.Value">
            <summary>
            Gets or sets the value of the node.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:YamlDotNet.RepresentationModel.YamlScalarNode.Style">
            <summary>
            Gets or sets the style of the node.
            </summary>
            <value>The style.</value>
        </member>
        <member name="P:YamlDotNet.RepresentationModel.YamlScalarNode.AllNodes">
            <summary>
            Gets all nodes from the document, starting on the current node.
            </summary>
        </member>
        <member name="T:YamlDotNet.RepresentationModel.Serialization.ObjectConverter">
            <summary>
            Performs type conversions.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.ObjectConverter.Convert``2(``0)">
            <summary>
            Attempts to convert the specified value to another type using various approaches.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
            <remarks>
            The conversion is first attempted by ditect casting.
            If it fails, the it attempts to use the <see cref="T:System.IConvertible"/> interface.
            If it still fails, it tries to use the <see cref="T:System.ComponentModel.TypeConverter"/> of the value's type, and then the <see cref="T:System.ComponentModel.TypeConverter"/> of the <typeparamref name="TTo"/> type.
            </remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>
            <exception cref="T:System.InvalidCastException">The value cannot be converted to the specified type.</exception>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.ObjectConverter.Convert(System.Object,System.Type)">
            <summary>
            Attempts to convert the specified value to another type using various approaches.
            </summary>
            <param name="value">The value.</param>
            <param name="to">To.</param>
            <returns></returns>
            <remarks>
            The conversion is first attempted by ditect casting.
            If it fails, it tries to use the <see cref="T:System.ComponentModel.TypeConverter"/> of the value's type, and then the <see cref="T:System.ComponentModel.TypeConverter"/> of the <paramref name="to"/> type.
            If it still fails, the it attempts to use the <see cref="T:System.IConvertible"/> interface.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Either <paramref name="value"/> or <paramref name="to"/> are null.</exception>
            <exception cref="T:System.InvalidCastException">The value cannot be converted to the specified type.</exception>
        </member>
        <member name="T:YamlDotNet.RepresentationModel.Serialization.ChainedEventEmitter">
            <summary>
            Provided the base implementation for an IEventEmitter that is a
            decorator for another IEventEmitter.
            </summary>
        </member>
        <member name="T:YamlDotNet.RepresentationModel.DuplicateAnchorException">
            <summary>
            The exception that is thrown when a duplicate anchor is detected.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.DuplicateAnchorException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:YamlDotNet.RepresentationModel.DuplicateAnchorException"/> class.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.DuplicateAnchorException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:YamlDotNet.RepresentationModel.DuplicateAnchorException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.DuplicateAnchorException.#ctor(YamlDotNet.Core.Mark,YamlDotNet.Core.Mark,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:YamlDotNet.RepresentationModel.DuplicateAnchorException"/> class.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.DuplicateAnchorException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:YamlDotNet.RepresentationModel.DuplicateAnchorException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.DuplicateAnchorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:YamlDotNet.RepresentationModel.DuplicateAnchorException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). </exception>
        </member>
        <member name="T:YamlDotNet.RepresentationModel.DocumentLoadingState">
            <summary>
            Manages the state of a <see cref="T:YamlDotNet.RepresentationModel.YamlDocument"/> while it is loading.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.DocumentLoadingState.AddAnchor(YamlDotNet.RepresentationModel.YamlNode)">
            <summary>
            Adds the specified node to the anchor list.
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.DocumentLoadingState.GetNode(System.String,System.Boolean,YamlDotNet.Core.Mark,YamlDotNet.Core.Mark)">
            <summary>
            Gets the node with the specified anchor.
            </summary>
            <param name="anchor">The anchor.</param>
            <param name="throwException">if set to <c>true</c>, the method should throw an exception if there is no node with that anchor.</param>
            <param name="start">The start position.</param>
            <param name="end">The end position.</param>
            <returns></returns>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.DocumentLoadingState.AddNodeWithUnresolvedAliases(YamlDotNet.RepresentationModel.YamlNode)">
            <summary>
            Adds the specified node to the collection of nodes with unresolved aliases.
            </summary>
            <param name="node">
            The <see cref="T:YamlDotNet.RepresentationModel.YamlNode"/> that has unresolved aliases.
            </param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.DocumentLoadingState.ResolveAliases">
            <summary>
            Resolves the aliases that could not be resolved while loading the document.
            </summary>
        </member>
        <member name="T:YamlDotNet.RepresentationModel.Serialization.IDeserializationContext">
            <summary>
            Contains additional information about a deserialization.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.IDeserializationContext.GetAnchor(System.Object)">
            <summary>
            Gets the anchor of the specified object.
            </summary>
            <param name="value">The object that has an anchor.</param>
            <returns>Returns the anchor of the object, or null if no anchor was defined.</returns>
        </member>
        <member name="T:YamlDotNet.RepresentationModel.Serialization.IObjectGraphVisitor">
            <summary>
            Defined the interface of a type that can be notified during an object graph traversal.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.IObjectGraphVisitor.Enter(System.Object,System.Type)">
            <summary>
            Indicates whether the specified value should be entered. This allows the visitor to
            override the handling of a particular object or type.
            </summary>
            <param name="value">The value that is about to be entered.</param>
            <param name="type">The static type of <paramref name="value"/>.</param>
            <returns>If the value is to be entered, returns true; otherwise returns false;</returns>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.IObjectGraphVisitor.EnterMapping(System.Object,System.Type,System.Object,System.Type)">
            <summary>
            Indicates whether the specified mapping should be entered. This allows the visitor to
            override the handling of a particular pair.
            </summary>
            <param name="key">The key of the mapping that is about to be entered.</param>
            <param name="keyType">The static type of <paramref name="key"/>.</param>
            <param name="value">The value of the mapping that is about to be entered.</param>
            <param name="valueType">The static type of <paramref name="value"/>.</param>
            <returns>If the mapping is to be entered, returns true; otherwise returns false;</returns>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.IObjectGraphVisitor.VisitScalar(System.Object,System.Type)">
            <summary>
            Notifies the visitor that a scalar value has been encountered.
            </summary>
            <param name="scalar">The value of the scalar.</param>
            <param name="scalarType">The static type of <paramref name="scalar"/>.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.IObjectGraphVisitor.VisitMappingStart(System.Object,System.Type,System.Type,System.Type)">
            <summary>
            Notifies the visitor that the traversal of a mapping is about to begin.
            </summary>
            <param name="mapping">The value that corresponds to the mapping.</param>
            <param name="mappingType">The static type of the mapping.</param>
            <param name="keyType">The static type of the keys of the mapping.</param>
            <param name="valueType">The static type of the values of the mapping.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.IObjectGraphVisitor.VisitMappingEnd(System.Object,System.Type)">
            <summary>
            Notifies the visitor that the traversal of a mapping has ended.
            </summary>
            <param name="mapping">The value that corresponds to the mapping.</param>
            <param name="mappingType">The static type of the mapping.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.IObjectGraphVisitor.VisitSequenceStart(System.Object,System.Type,System.Type)">
            <summary>
            Notifies the visitor that the traversal of a sequence is about to begin.
            </summary>
            <param name="sequence">The value that corresponds to the sequence.</param>
            <param name="sequenceType">The static type of the mapping.</param>
            <param name="elementType">The static type of the elements of the sequence.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.IObjectGraphVisitor.VisitSequenceEnd(System.Object,System.Type)">
            <summary>
            Notifies the visitor that the traversal of a sequence has ended.
            </summary>
            <param name="sequence">The value that corresponds to the sequence.</param>
            <param name="sequenceType">The static type of the mapping.</param>
        </member>
        <member name="T:YamlDotNet.RepresentationModel.YamlSequenceNode">
            <summary>
            Represents a sequence node in the YAML document.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlSequenceNode.#ctor(YamlDotNet.Core.EventReader,YamlDotNet.RepresentationModel.DocumentLoadingState)">
            <summary>
            Initializes a new instance of the <see cref="T:YamlDotNet.RepresentationModel.YamlSequenceNode"/> class.
            </summary>
            <param name="events">The events.</param>
            <param name="state">The state.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlSequenceNode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:YamlDotNet.RepresentationModel.YamlSequenceNode"/> class.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlSequenceNode.#ctor(YamlDotNet.RepresentationModel.YamlNode[])">
            <summary>
            Initializes a new instance of the <see cref="T:YamlDotNet.RepresentationModel.YamlSequenceNode"/> class.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlSequenceNode.#ctor(System.Collections.Generic.IEnumerable{YamlDotNet.RepresentationModel.YamlNode})">
            <summary>
            Initializes a new instance of the <see cref="T:YamlDotNet.RepresentationModel.YamlSequenceNode"/> class.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlSequenceNode.Add(YamlDotNet.RepresentationModel.YamlNode)">
            <summary>
            Adds the specified child to the <see cref="P:YamlDotNet.RepresentationModel.YamlSequenceNode.Children"/> collection.
            </summary>
            <param name="child">The child.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlSequenceNode.Add(System.String)">
            <summary>
            Adds a scalar node to the <see cref="P:YamlDotNet.RepresentationModel.YamlSequenceNode.Children"/> collection.
            </summary>
            <param name="child">The child.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlSequenceNode.ResolveAliases(YamlDotNet.RepresentationModel.DocumentLoadingState)">
            <summary>
            Resolves the aliases that could not be resolved when the node was created.
            </summary>
            <param name="state">The state of the document.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlSequenceNode.Emit(YamlDotNet.Core.Emitter,YamlDotNet.RepresentationModel.EmitterState)">
            <summary>
            Saves the current node to the specified emitter.
            </summary>
            <param name="emitter">The emitter where the node is to be saved.</param>
            <param name="state">The state.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlSequenceNode.Accept(YamlDotNet.RepresentationModel.IYamlVisitor)">
            <summary>
            Accepts the specified visitor by calling the appropriate Visit method on it.
            </summary>
            <param name="visitor">
            A <see cref="T:YamlDotNet.RepresentationModel.IYamlVisitor"/>.
            </param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlSequenceNode.Equals(System.Object)">
            <summary />
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlSequenceNode.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlSequenceNode.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlSequenceNode.GetEnumerator">
            <summary />
        </member>
        <member name="P:YamlDotNet.RepresentationModel.YamlSequenceNode.Children">
            <summary>
            Gets the collection of child nodes.
            </summary>
            <value>The children.</value>
        </member>
        <member name="P:YamlDotNet.RepresentationModel.YamlSequenceNode.Style">
            <summary>
            Gets or sets the style of the node.
            </summary>
            <value>The style.</value>
        </member>
        <member name="P:YamlDotNet.RepresentationModel.YamlSequenceNode.AllNodes">
            <summary>
            Gets all nodes from the document, starting on the current node.
            </summary>
        </member>
        <member name="T:YamlDotNet.RepresentationModel.Serialization.DeserializationOverride">
            <summary>
            
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.DeserializationOverride.#ctor(System.Type,System.String,System.Action{System.Object,YamlDotNet.Core.EventReader})">
            <summary>
            Initializes a new instance of the <see cref="T:YamlDotNet.RepresentationModel.Serialization.DeserializationOverride"/> class.
            </summary>
            <param name="deserializedType">The type that contains the property.</param>
            <param name="deserializedPropertyName">Name of the deserialized property.</param>
            <param name="deserializer">The delegate that will perform the deserialization.</param>
        </member>
        <member name="P:YamlDotNet.RepresentationModel.Serialization.DeserializationOverride.DeserializedType">
            <summary>
            Gets type that contains the property.
            </summary>
        </member>
        <member name="P:YamlDotNet.RepresentationModel.Serialization.DeserializationOverride.DeserializedPropertyName">
            <summary>
            Gets the name of the deserialized property.
            </summary>
        </member>
        <member name="P:YamlDotNet.RepresentationModel.Serialization.DeserializationOverride.Deserializer">
            <summary>
            Gets the delegate that will perform the deserialization.
            </summary>
        </member>
        <member name="T:YamlDotNet.RepresentationModel.EmitterState">
            <summary>
            Holds state that is used when emitting a stream.
            </summary>
        </member>
        <member name="P:YamlDotNet.RepresentationModel.EmitterState.EmittedAnchors">
            <summary>
            Gets the already emitted anchors.
            </summary>
            <value>The emitted anchors.</value>
        </member>
        <member name="T:YamlDotNet.RepresentationModel.YamlAliasNode">
            <summary>
            Represents an alias node in the YAML document.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlAliasNode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:YamlDotNet.RepresentationModel.YamlAliasNode"/> class.
            </summary>
            <param name="anchor">The anchor.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlAliasNode.ResolveAliases(YamlDotNet.RepresentationModel.DocumentLoadingState)">
            <summary>
            Resolves the aliases that could not be resolved when the node was created.
            </summary>
            <param name="state">The state of the document.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlAliasNode.Emit(YamlDotNet.Core.Emitter,YamlDotNet.RepresentationModel.EmitterState)">
            <summary>
            Saves the current node to the specified emitter.
            </summary>
            <param name="emitter">The emitter where the node is to be saved.</param>
            <param name="state">The state.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlAliasNode.Accept(YamlDotNet.RepresentationModel.IYamlVisitor)">
            <summary>
            Accepts the specified visitor by calling the appropriate Visit method on it.
            </summary>
            <param name="visitor">
            A <see cref="T:YamlDotNet.RepresentationModel.IYamlVisitor"/>.
            </param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlAliasNode.Equals(System.Object)">
            <summary />
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlAliasNode.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlAliasNode.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:YamlDotNet.RepresentationModel.YamlAliasNode.AllNodes">
            <summary>
            Gets all nodes from the document, starting on the current node.
            </summary>
        </member>
        <member name="T:YamlDotNet.RepresentationModel.Serialization.RoundtripObjectGraphTraversalStrategy">
            <summary>
            An implementation of <see cref="T:YamlDotNet.RepresentationModel.Serialization.IObjectGraphTraversalStrategy"/> that traverses
            properties that are read/write, collections and dictionaries, while ensuring that
            the graph can be regenerated from the resulting document.
            </summary>
        </member>
        <member name="T:YamlDotNet.RepresentationModel.Serialization.FullObjectGraphTraversalStrategy">
            <summary>
            An implementation of <see cref="T:YamlDotNet.RepresentationModel.Serialization.IObjectGraphTraversalStrategy"/> that traverses
            readable properties, collections and dictionaries.
            </summary>
        </member>
        <member name="T:YamlDotNet.RepresentationModel.Serialization.IObjectGraphTraversalStrategy">
            <summary>
            Defines a strategy that walks through an object graph.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.IObjectGraphTraversalStrategy.Traverse(System.Object,System.Type,YamlDotNet.RepresentationModel.Serialization.IObjectGraphVisitor)">
            <summary>
            Traverses the specified object graph.
            </summary>
            <param name="graph">The graph.</param>
            <param name="type">The static type of the graph.</param>
            <param name="visitor">An <see cref="T:YamlDotNet.RepresentationModel.Serialization.IObjectGraphVisitor"/> that is to be notified during the traversal.</param>
        </member>
        <member name="T:YamlDotNet.RepresentationModel.YamlNodeIdentityEqualityComparer">
            <summary>
            Comparer that is based on identity comparisons.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlNodeIdentityEqualityComparer.Equals(YamlDotNet.RepresentationModel.YamlNode,YamlDotNet.RepresentationModel.YamlNode)">
            <summary />
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlNodeIdentityEqualityComparer.GetHashCode(YamlDotNet.RepresentationModel.YamlNode)">
            <summary />
        </member>
        <member name="T:YamlDotNet.RepresentationModel.Serialization.TagMappings">
            <summary>
            Contains mappings between tags and types.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.TagMappings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:YamlDotNet.RepresentationModel.Serialization.TagMappings"/> class.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.TagMappings.#ctor(System.Collections.Generic.IDictionary{System.String,System.Type})">
            <summary>
            Initializes a new instance of the <see cref="T:YamlDotNet.RepresentationModel.Serialization.TagMappings"/> class.
            </summary>
            <param name="mappings">The mappings.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.TagMappings.Add(System.String,System.Type)">
            <summary>
            Adds the specified tag.
            </summary>
            <param name="tag">The tag.</param>
            <param name="mapping">The mapping.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.TagMappings.GetMapping(System.String)">
            <summary>
            Gets the mapping.
            </summary>
            <param name="tag">The tag.</param>
            <returns></returns>
        </member>
        <member name="T:YamlDotNet.RepresentationModel.YamlMappingNode">
            <summary>
            Represents a mapping node in the YAML document.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlMappingNode.#ctor(YamlDotNet.Core.EventReader,YamlDotNet.RepresentationModel.DocumentLoadingState)">
            <summary>
            Initializes a new instance of the <see cref="T:YamlDotNet.RepresentationModel.YamlMappingNode"/> class.
            </summary>
            <param name="events">The events.</param>
            <param name="state">The state.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlMappingNode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:YamlDotNet.RepresentationModel.YamlMappingNode"/> class.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlMappingNode.#ctor(System.Collections.Generic.KeyValuePair{YamlDotNet.RepresentationModel.YamlNode,YamlDotNet.RepresentationModel.YamlNode}[])">
            <summary>
            Initializes a new instance of the <see cref="T:YamlDotNet.RepresentationModel.YamlMappingNode"/> class.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlMappingNode.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{YamlDotNet.RepresentationModel.YamlNode,YamlDotNet.RepresentationModel.YamlNode}})">
            <summary>
            Initializes a new instance of the <see cref="T:YamlDotNet.RepresentationModel.YamlMappingNode"/> class.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlMappingNode.#ctor(YamlDotNet.RepresentationModel.YamlNode[])">
            <summary>
            Initializes a new instance of the <see cref="T:YamlDotNet.RepresentationModel.YamlMappingNode"/> class.
            </summary>
            <param name="children">A sequence of <see cref="T:YamlDotNet.RepresentationModel.YamlNode"/> where even elements are keys and odd elements are values.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlMappingNode.#ctor(System.Collections.Generic.IEnumerable{YamlDotNet.RepresentationModel.YamlNode})">
            <summary>
            Initializes a new instance of the <see cref="T:YamlDotNet.RepresentationModel.YamlMappingNode"/> class.
            </summary>
            <param name="children">A sequence of <see cref="T:YamlDotNet.RepresentationModel.YamlNode"/> where even elements are keys and odd elements are values.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlMappingNode.Add(YamlDotNet.RepresentationModel.YamlNode,YamlDotNet.RepresentationModel.YamlNode)">
            <summary>
            Adds the specified mapping to the <see cref="P:YamlDotNet.RepresentationModel.YamlMappingNode.Children"/> collection.
            </summary>
            <param name="key">The key node.</param>
            <param name="value">The value node.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlMappingNode.Add(System.String,YamlDotNet.RepresentationModel.YamlNode)">
            <summary>
            Adds the specified mapping to the <see cref="P:YamlDotNet.RepresentationModel.YamlMappingNode.Children"/> collection.
            </summary>
            <param name="key">The key node.</param>
            <param name="value">The value node.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlMappingNode.Add(YamlDotNet.RepresentationModel.YamlNode,System.String)">
            <summary>
            Adds the specified mapping to the <see cref="P:YamlDotNet.RepresentationModel.YamlMappingNode.Children"/> collection.
            </summary>
            <param name="key">The key node.</param>
            <param name="value">The value node.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlMappingNode.Add(System.String,System.String)">
            <summary>
            Adds the specified mapping to the <see cref="P:YamlDotNet.RepresentationModel.YamlMappingNode.Children"/> collection.
            </summary>
            <param name="key">The key node.</param>
            <param name="value">The value node.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlMappingNode.ResolveAliases(YamlDotNet.RepresentationModel.DocumentLoadingState)">
            <summary>
            Resolves the aliases that could not be resolved when the node was created.
            </summary>
            <param name="state">The state of the document.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlMappingNode.Emit(YamlDotNet.Core.Emitter,YamlDotNet.RepresentationModel.EmitterState)">
            <summary>
            Saves the current node to the specified emitter.
            </summary>
            <param name="emitter">The emitter where the node is to be saved.</param>
            <param name="state">The state.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlMappingNode.Accept(YamlDotNet.RepresentationModel.IYamlVisitor)">
            <summary>
            Accepts the specified visitor by calling the appropriate Visit method on it.
            </summary>
            <param name="visitor">
            A <see cref="T:YamlDotNet.RepresentationModel.IYamlVisitor"/>.
            </param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlMappingNode.Equals(System.Object)">
            <summary />
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlMappingNode.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlMappingNode.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlMappingNode.GetEnumerator">
            <summary />
        </member>
        <member name="P:YamlDotNet.RepresentationModel.YamlMappingNode.Children">
            <summary>
            Gets the children of the current node.
            </summary>
            <value>The children.</value>
        </member>
        <member name="P:YamlDotNet.RepresentationModel.YamlMappingNode.Style">
            <summary>
            Gets or sets the style of the node.
            </summary>
            <value>The style.</value>
        </member>
        <member name="P:YamlDotNet.RepresentationModel.YamlMappingNode.AllNodes">
            <summary>
            Gets all nodes from the document, starting on the current node.
            </summary>
        </member>
        <member name="T:YamlDotNet.RepresentationModel.Serialization.DeserializationOverrides">
            <summary>
            Allows to register delegates that take care of the deserialization process of specific properties.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.DeserializationOverrides.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:YamlDotNet.RepresentationModel.Serialization.DeserializationOverrides"/> class.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.DeserializationOverrides.#ctor(System.Collections.Generic.IEnumerable{YamlDotNet.RepresentationModel.Serialization.DeserializationOverride})">
            <summary>
            Initializes a new instance of the <see cref="T:YamlDotNet.RepresentationModel.Serialization.DeserializationOverrides"/> class.
            </summary>
            <param name="overrides">The overrides.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.DeserializationOverrides.Add``1(System.String,System.Action{``0,YamlDotNet.Core.EventReader})">
            <summary>
            Adds an override for the specified property.
            </summary>
            <typeparam name="TDeserialized">The type that contains the property.</typeparam>
            <param name="deserializedPropertyName">Name of the deserialized property.</param>
            <param name="deserializer">The delegate that will perform the deserialization.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.DeserializationOverrides.Add(YamlDotNet.RepresentationModel.Serialization.DeserializationOverride)">
            <summary>
            Adds an override for the specified property.
            </summary>
            <param name="over">The override.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.DeserializationOverrides.Add(System.Type,System.String,System.Action{System.Object,YamlDotNet.Core.EventReader})">
            <summary>
            Adds an override for the specified property.
            </summary>
            <param name="deserializedType">The type that contains the property.</param>
            <param name="deserializedPropertyName">Name of the deserialized property.</param>
            <param name="deserializer">The delegate that will perform the deserialization.</param>
        </member>
        <member name="T:YamlDotNet.RepresentationModel.YamlStream">
            <summary>
            Represents an YAML stream.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlStream.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:YamlDotNet.RepresentationModel.YamlStream"/> class.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlStream.#ctor(YamlDotNet.RepresentationModel.YamlDocument[])">
            <summary>
            Initializes a new instance of the <see cref="T:YamlDotNet.RepresentationModel.YamlStream"/> class.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlStream.#ctor(System.Collections.Generic.IEnumerable{YamlDotNet.RepresentationModel.YamlDocument})">
            <summary>
            Initializes a new instance of the <see cref="T:YamlDotNet.RepresentationModel.YamlStream"/> class.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlStream.Add(YamlDotNet.RepresentationModel.YamlDocument)">
            <summary>
            Adds the specified document to the <see cref="P:YamlDotNet.RepresentationModel.YamlStream.Documents"/> collection.
            </summary>
            <param name="document">The document.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlStream.Load(System.IO.TextReader)">
            <summary>
            Loads the stream from the specified input.
            </summary>
            <param name="input">The input.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlStream.Save(System.IO.TextWriter)">
            <summary>
            Saves the stream to the specified output.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlStream.Accept(YamlDotNet.RepresentationModel.IYamlVisitor)">
            <summary>
            Accepts the specified visitor by calling the appropriate Visit method on it.
            </summary>
            <param name="visitor">
            A <see cref="T:YamlDotNet.RepresentationModel.IYamlVisitor"/>.
            </param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlStream.GetEnumerator">
            <summary />
        </member>
        <member name="P:YamlDotNet.RepresentationModel.YamlStream.Documents">
            <summary>
            Gets the documents inside the stream.
            </summary>
            <value>The documents.</value>
        </member>
        <member name="T:YamlDotNet.RepresentationModel.IYamlSerializable">
            <summary>
            Allows an object to customize how it is serialized and deserialized.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.IYamlSerializable.ReadYaml(YamlDotNet.Core.Parser)">
            <summary>
            Reads this object's state from a YAML parser.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.IYamlSerializable.WriteYaml(YamlDotNet.Core.Emitter)">
            <summary>
            Writes this object's state to a YAML emitter.
            </summary>
        </member>
        <member name="T:YamlDotNet.RepresentationModel.YamlVisitor">
            <summary>
            Abstract implementation of <see cref="T:YamlDotNet.RepresentationModel.IYamlVisitor"/> that knows how to walk a complete Yaml object model.
            </summary>
        </member>
        <member name="T:YamlDotNet.RepresentationModel.IYamlVisitor">
            <summary>
            Defines the method needed to be able to visit Yaml elements.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.IYamlVisitor.Visit(YamlDotNet.RepresentationModel.YamlStream)">
            <summary>
            Visits a <see cref="T:YamlDotNet.RepresentationModel.YamlStream"/>.
            </summary>
            <param name="stream">
            The <see cref="T:YamlDotNet.RepresentationModel.YamlStream"/> that is being visited.
            </param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.IYamlVisitor.Visit(YamlDotNet.RepresentationModel.YamlDocument)">
            <summary>
            Visits a <see cref="T:YamlDotNet.RepresentationModel.YamlDocument"/>.
            </summary>
            <param name="document">
            The <see cref="T:YamlDotNet.RepresentationModel.YamlDocument"/> that is being visited.
            </param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.IYamlVisitor.Visit(YamlDotNet.RepresentationModel.YamlScalarNode)">
            <summary>
            Visits a <see cref="T:YamlDotNet.RepresentationModel.YamlScalarNode"/>.
            </summary>
            <param name="scalar">
            The <see cref="T:YamlDotNet.RepresentationModel.YamlScalarNode"/> that is being visited.
            </param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.IYamlVisitor.Visit(YamlDotNet.RepresentationModel.YamlSequenceNode)">
            <summary>
            Visits a <see cref="T:YamlDotNet.RepresentationModel.YamlSequenceNode"/>.
            </summary>
            <param name="sequence">
            The <see cref="T:YamlDotNet.RepresentationModel.YamlSequenceNode"/> that is being visited.
            </param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.IYamlVisitor.Visit(YamlDotNet.RepresentationModel.YamlMappingNode)">
            <summary>
            Visits a <see cref="T:YamlDotNet.RepresentationModel.YamlMappingNode"/>.
            </summary>
            <param name="mapping">
            The <see cref="T:YamlDotNet.RepresentationModel.YamlMappingNode"/> that is being visited.
            </param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlVisitor.Visit(YamlDotNet.RepresentationModel.YamlStream)">
            <summary>
            Called when this object is visiting a <see cref="T:YamlDotNet.RepresentationModel.YamlStream"/>.
            </summary>
            <param name="stream">
            The <see cref="T:YamlDotNet.RepresentationModel.YamlStream"/> that is being visited.
            </param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlVisitor.Visited(YamlDotNet.RepresentationModel.YamlStream)">
            <summary>
            Called after this object finishes visiting a <see cref="T:YamlDotNet.RepresentationModel.YamlStream"/>.
            </summary>
            <param name="stream">
            The <see cref="T:YamlDotNet.RepresentationModel.YamlStream"/> that has been visited.
            </param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlVisitor.Visit(YamlDotNet.RepresentationModel.YamlDocument)">
            <summary>
            Called when this object is visiting a <see cref="T:YamlDotNet.RepresentationModel.YamlDocument"/>.
            </summary>
            <param name="document">
            The <see cref="T:YamlDotNet.RepresentationModel.YamlDocument"/> that is being visited.
            </param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlVisitor.Visited(YamlDotNet.RepresentationModel.YamlDocument)">
            <summary>
            Called after this object finishes visiting a <see cref="T:YamlDotNet.RepresentationModel.YamlDocument"/>.
            </summary>
            <param name="document">
            The <see cref="T:YamlDotNet.RepresentationModel.YamlDocument"/> that has been visited.
            </param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlVisitor.Visit(YamlDotNet.RepresentationModel.YamlScalarNode)">
            <summary>
            Called when this object is visiting a <see cref="T:YamlDotNet.RepresentationModel.YamlScalarNode"/>.
            </summary>
            <param name="scalar">
            The <see cref="T:YamlDotNet.RepresentationModel.YamlScalarNode"/> that is being visited.
            </param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlVisitor.Visited(YamlDotNet.RepresentationModel.YamlScalarNode)">
            <summary>
            Called after this object finishes visiting a <see cref="T:YamlDotNet.RepresentationModel.YamlScalarNode"/>.
            </summary>
            <param name="scalar">
            The <see cref="T:YamlDotNet.RepresentationModel.YamlScalarNode"/> that has been visited.
            </param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlVisitor.Visit(YamlDotNet.RepresentationModel.YamlSequenceNode)">
            <summary>
            Called when this object is visiting a <see cref="T:YamlDotNet.RepresentationModel.YamlSequenceNode"/>.
            </summary>
            <param name="sequence">
            The <see cref="T:YamlDotNet.RepresentationModel.YamlSequenceNode"/> that is being visited.
            </param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlVisitor.Visited(YamlDotNet.RepresentationModel.YamlSequenceNode)">
            <summary>
            Called after this object finishes visiting a <see cref="T:YamlDotNet.RepresentationModel.YamlSequenceNode"/>.
            </summary>
            <param name="sequence">
            The <see cref="T:YamlDotNet.RepresentationModel.YamlSequenceNode"/> that has been visited.
            </param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlVisitor.Visit(YamlDotNet.RepresentationModel.YamlMappingNode)">
            <summary>
            Called when this object is visiting a <see cref="T:YamlDotNet.RepresentationModel.YamlMappingNode"/>.
            </summary>
            <param name="mapping">
            The <see cref="T:YamlDotNet.RepresentationModel.YamlMappingNode"/> that is being visited.
            </param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlVisitor.Visited(YamlDotNet.RepresentationModel.YamlMappingNode)">
            <summary>
            Called after this object finishes visiting a <see cref="T:YamlDotNet.RepresentationModel.YamlMappingNode"/>.
            </summary>
            <param name="mapping">
            The <see cref="T:YamlDotNet.RepresentationModel.YamlMappingNode"/> that has been visited.
            </param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlVisitor.VisitChildren(YamlDotNet.RepresentationModel.YamlStream)">
            <summary>
            Visits every child of a <see cref="T:YamlDotNet.RepresentationModel.YamlStream"/>.
            </summary>
            <param name="stream">
            The <see cref="T:YamlDotNet.RepresentationModel.YamlStream"/> that is being visited.
            </param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlVisitor.VisitChildren(YamlDotNet.RepresentationModel.YamlDocument)">
            <summary>
            Visits every child of a <see cref="T:YamlDotNet.RepresentationModel.YamlDocument"/>.
            </summary>
            <param name="document">
            The <see cref="T:YamlDotNet.RepresentationModel.YamlDocument"/> that is being visited.
            </param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlVisitor.VisitChildren(YamlDotNet.RepresentationModel.YamlSequenceNode)">
            <summary>
            Visits every child of a <see cref="T:YamlDotNet.RepresentationModel.YamlSequenceNode"/>.
            </summary>
            <param name="sequence">
            The <see cref="T:YamlDotNet.RepresentationModel.YamlSequenceNode"/> that is being visited.
            </param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlVisitor.VisitChildren(YamlDotNet.RepresentationModel.YamlMappingNode)">
            <summary>
            Visits every child of a <see cref="T:YamlDotNet.RepresentationModel.YamlMappingNode"/>.
            </summary>
            <param name="mapping">
            The <see cref="T:YamlDotNet.RepresentationModel.YamlMappingNode"/> that is being visited.
            </param>
        </member>
        <member name="T:YamlDotNet.RepresentationModel.Serialization.YamlSerializerModes">
            <summary>
            Specifies the behavior of the <see cref="T:YamlDotNet.RepresentationModel.Serialization.YamlSerializer"/>.
            </summary>
        </member>
        <member name="F:YamlDotNet.RepresentationModel.Serialization.YamlSerializerModes.None">
            <summary>
            Serializes using the default options
            </summary>
        </member>
        <member name="F:YamlDotNet.RepresentationModel.Serialization.YamlSerializerModes.Roundtrip">
            <summary>
            Ensures that it will be possible to deserialize the serialized objects.
            </summary>
        </member>
        <member name="F:YamlDotNet.RepresentationModel.Serialization.YamlSerializerModes.DisableAliases">
            <summary>
            If this flag is specified, if the same object appears more than once in the
            serialization graph, it will be serialized each time instead of just once.
            </summary>
            <remarks>
            If the serialization graph contains circular references and this flag is set,
            a <see cref="T:System.StackOverflowException"/> will be thrown.
            If this flag is not set, there is a performance penalty because the entire
            object graph must be walked twice.
            </remarks>
        </member>
        <member name="F:YamlDotNet.RepresentationModel.Serialization.YamlSerializerModes.EmitDefaults">
            <summary>
            Forces every value to be serialized, even if it is the default value for that type.
            </summary>
        </member>
        <member name="F:YamlDotNet.RepresentationModel.Serialization.YamlSerializerModes.JsonCompatible">
            <summary>
            Ensures that the result of the serialization is valid JSON.
            </summary>
        </member>
        <member name="T:YamlDotNet.RepresentationModel.Serialization.IYamlTypeConverter">
            <summary>
            Allows to customize how a type is serialized and deserialized.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.IYamlTypeConverter.Accepts(System.Type)">
            <summary>
            Gets a value indicating whether the current converter supports converting the specified type.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.IYamlTypeConverter.ReadYaml(YamlDotNet.Core.Parser,System.Type)">
            <summary>
            Reads an object's state from a YAML parser.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.IYamlTypeConverter.WriteYaml(YamlDotNet.Core.Emitter,System.Object,System.Type)">
            <summary>
            Writes the specified object's state to a YAML emitter.
            </summary>
        </member>
        <member name="T:YamlDotNet.RepresentationModel.AnchorNotFoundException">
            <summary>
            The exception that is thrown when an alias references an anchor that does not exist.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.AnchorNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:YamlDotNet.RepresentationModel.AnchorNotFoundException"/> class.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.AnchorNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:YamlDotNet.RepresentationModel.AnchorNotFoundException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.AnchorNotFoundException.#ctor(YamlDotNet.Core.Mark,YamlDotNet.Core.Mark,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:YamlDotNet.RepresentationModel.AnchorNotFoundException"/> class.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.AnchorNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:YamlDotNet.RepresentationModel.AnchorNotFoundException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.AnchorNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:YamlDotNet.RepresentationModel.AnchorNotFoundException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). </exception>
        </member>
        <member name="T:YamlDotNet.RepresentationModel.Serialization.YamlSerializer">
            <summary>
            Reads and writes objects from and to YAML.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.YamlSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:YamlDotNet.RepresentationModel.Serialization.YamlSerializer"/> class.
            </summary>
            <remarks>
            When deserializing, the stream must contain type information for the root element.
            </remarks>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.YamlSerializer.#ctor(YamlDotNet.RepresentationModel.Serialization.YamlSerializerModes)">
            <summary>
            Initializes a new instance of the <see cref="T:YamlDotNet.RepresentationModel.Serialization.YamlSerializer"/> class.
            </summary>
            <param name="mode">The options the specify the behavior of the serializer.</param>
            <remarks>
            When deserializing, the stream must contain type information for the root element.
            </remarks>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.YamlSerializer.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:YamlDotNet.RepresentationModel.Serialization.YamlSerializer"/> class.
            </summary>
            <param name="serializedType">Type of the serialized.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.YamlSerializer.#ctor(System.Type,YamlDotNet.RepresentationModel.Serialization.YamlSerializerModes)">
            <summary>
            Initializes a new instance of the <see cref="T:YamlDotNet.RepresentationModel.Serialization.YamlSerializer"/> class.
            </summary>
            <param name="serializedType">Type of the serialized.</param>
            <param name="mode">The options the specify the behavior of the serializer.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.YamlSerializer.Create``1(``0)">
            <summary>
            Creates a new instance of <see cref="T:YamlDotNet.RepresentationModel.Serialization.YamlSerializer`1"/>.
            </summary>
            <typeparam name="TSerialized">The type of the serialized.</typeparam>
            <param name="serialized">An object of the serialized type. This parameter is necessary to allow type inference.</param>
            <returns></returns>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.YamlSerializer.Create``1(``0,YamlDotNet.RepresentationModel.Serialization.YamlSerializerModes)">
            <summary>
            Creates a new instance of <see cref="T:YamlDotNet.RepresentationModel.Serialization.YamlSerializer`1"/>.
            </summary>
            <typeparam name="TSerialized">The type of the serialized.</typeparam>
            <param name="serialized">An object of the serialized type. This parameter is necessary to allow type inference.</param>
            <param name="mode">The mode.</param>
            <returns></returns>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.YamlSerializer.RegisterTypeConverter(YamlDotNet.RepresentationModel.Serialization.IYamlTypeConverter)">
            <summary>
            Registers a type converter to be used to serialize and deserialize specific types.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.YamlSerializer.Serialize(System.IO.TextWriter,System.Object)">
            <summary>
            Serializes the specified object.
            </summary>
            <param name="output">The writer where to serialize the object.</param>
            <param name="graph">The object to serialize.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.YamlSerializer.Deserialize(System.IO.TextReader,YamlDotNet.RepresentationModel.Serialization.IDeserializationContext@)">
            <summary>
            Deserializes an object from the specified stream.
            </summary>
            <param name="input">The input.</param>
            <param name="context">Returns additional information about the deserialization process.</param>
            <returns></returns>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.YamlSerializer.Deserialize(System.IO.TextReader,YamlDotNet.RepresentationModel.Serialization.DeserializationOptions,YamlDotNet.RepresentationModel.Serialization.IDeserializationContext@)">
            <summary>
            Deserializes an object from the specified stream.
            </summary>
            <param name="input">The input.</param>
            <param name="options">The mode.</param>
            <param name="context">Returns additional information about the deserialization process.</param>
            <returns></returns>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.YamlSerializer.Deserialize(System.IO.TextReader)">
            <summary>
            Deserializes an object from the specified stream.
            </summary>
            <param name="input">The input.</param>
            <returns></returns>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.YamlSerializer.Deserialize(System.IO.TextReader,YamlDotNet.RepresentationModel.Serialization.DeserializationOptions)">
            <summary>
            Deserializes an object from the specified stream.
            </summary>
            <param name="input">The input.</param>
            <param name="options">The mode.</param>
            <returns></returns>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.YamlSerializer.Deserialize(YamlDotNet.Core.EventReader)">
            <summary>
            Deserializes the specified reader.
            </summary>
            <param name="reader">The reader.</param>
            <returns></returns>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.YamlSerializer.Deserialize(YamlDotNet.Core.EventReader,YamlDotNet.RepresentationModel.Serialization.DeserializationOptions)">
            <summary>
            Deserializes the specified reader.
            </summary>
            <param name="reader">The reader.</param>
            <param name="options">The mode.</param>
            <returns></returns>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.YamlSerializer.Deserialize(YamlDotNet.Core.EventReader,YamlDotNet.RepresentationModel.Serialization.IDeserializationContext@)">
            <summary>
            Deserializes the specified reader.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">Returns additional information about the deserialization process.</param>
            <returns></returns>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.YamlSerializer.Deserialize(YamlDotNet.Core.EventReader,YamlDotNet.RepresentationModel.Serialization.DeserializationOptions,YamlDotNet.RepresentationModel.Serialization.IDeserializationContext@)">
            <summary>
            Deserializes the specified reader.
            </summary>
            <param name="reader">The reader.</param>
            <param name="options">The mode.</param>
            <param name="context">Returns additional information about the deserialization process.</param>
            <returns></returns>
        </member>
        <member name="T:YamlDotNet.RepresentationModel.Serialization.YamlSerializer.DeserializationContext">
            <summary>
            Contains additional information about a deserialization.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.YamlSerializer.DeserializationContext.#ctor(YamlDotNet.RepresentationModel.Serialization.DeserializationOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:YamlDotNet.RepresentationModel.Serialization.YamlSerializer.DeserializationContext"/> class.
            </summary>
            <param name="options">The mode.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.YamlSerializer.DeserializationContext.GetAnchor(System.Object)">
            <summary>
            Gets the anchor of the specified object.
            </summary>
            <param name="value">The object that has an anchor.</param>
            <returns>Returns the anchor of the object, or null if no anchor was defined.</returns>
        </member>
        <member name="T:YamlDotNet.RepresentationModel.Serialization.YamlSerializer`1">
            <summary>
            Extension of the <see cref="T:YamlDotNet.RepresentationModel.Serialization.YamlSerializer"/> type that avoida the need for casting
            on the user's code.
            </summary>
            <typeparam name="TSerialized">The type of the serialized.</typeparam>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.YamlSerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:YamlDotNet.RepresentationModel.Serialization.YamlSerializer`1"/> class.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.YamlSerializer`1.#ctor(YamlDotNet.RepresentationModel.Serialization.YamlSerializerModes)">
            <summary>
            Initializes a new instance of the <see cref="T:YamlDotNet.RepresentationModel.Serialization.YamlSerializer`1"/> class.
            </summary>
            <param name="mode">The options.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.YamlSerializer`1.Deserialize(System.IO.TextReader)">
            <summary>
            Deserializes an object from the specified stream.
            </summary>
            <param name="input">The input.</param>
            <returns></returns>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.YamlSerializer`1.Deserialize(System.IO.TextReader,YamlDotNet.RepresentationModel.Serialization.DeserializationOptions)">
            <summary>
            Deserializes an object from the specified stream.
            </summary>
            <param name="input">The input.</param>
            <param name="options">The options.</param>
            <returns></returns>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.YamlSerializer`1.Deserialize(System.IO.TextReader,YamlDotNet.RepresentationModel.Serialization.IDeserializationContext@)">
            <summary>
            Deserializes an object from the specified stream.
            </summary>
            <param name="input">The input.</param>
            <param name="context">Returns additional information about the deserialization process.</param>
            <returns></returns>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.YamlSerializer`1.Deserialize(System.IO.TextReader,YamlDotNet.RepresentationModel.Serialization.DeserializationOptions,YamlDotNet.RepresentationModel.Serialization.IDeserializationContext@)">
            <summary>
            Deserializes an object from the specified stream.
            </summary>
            <param name="input">The input.</param>
            <param name="options">The options.</param>
            <param name="context">Returns additional information about the deserialization process.</param>
            <returns></returns>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.YamlSerializer`1.Deserialize(YamlDotNet.Core.EventReader)">
            <summary>
            Deserializes the specified reader.
            </summary>
            <param name="reader">The reader.</param>
            <returns></returns>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.YamlSerializer`1.Deserialize(YamlDotNet.Core.EventReader,YamlDotNet.RepresentationModel.Serialization.DeserializationOptions)">
            <summary>
            Deserializes the specified reader.
            </summary>
            <param name="reader">The reader.</param>
            <param name="options">The options.</param>
            <returns></returns>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.YamlSerializer`1.Deserialize(YamlDotNet.Core.EventReader,YamlDotNet.RepresentationModel.Serialization.IDeserializationContext@)">
            <summary>
            Deserializes the specified reader.
            </summary>
            <param name="reader">The reader.</param>
            <param name="context">Returns additional information about the deserialization process.</param>
            <returns></returns>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.YamlSerializer`1.Deserialize(YamlDotNet.Core.EventReader,YamlDotNet.RepresentationModel.Serialization.DeserializationOptions,YamlDotNet.RepresentationModel.Serialization.IDeserializationContext@)">
            <summary>
            Deserializes the specified reader.
            </summary>
            <param name="reader">The reader.</param>
            <param name="options">The options.</param>
            <param name="context">Returns additional information about the deserialization process.</param>
            <returns></returns>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.ObjectAnchorCollection.Add(System.String,System.Object)">
            <summary>
            Adds the specified anchor.
            </summary>
            <param name="anchor">The anchor.</param>
            <param name="object">The @object.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.ObjectAnchorCollection.TryGetAnchor(System.Object,System.String@)">
            <summary>
            Gets the anchor for the specified object.
            </summary>
            <param name="object">The object.</param>
            <param name="anchor">The anchor.</param>
            <returns></returns>
        </member>
        <member name="P:YamlDotNet.RepresentationModel.Serialization.ObjectAnchorCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:System.Object"/> with the specified anchor.
            </summary>
            <value></value>
        </member>
        <member name="T:YamlDotNet.RepresentationModel.YamlDocument">
            <summary>
            Represents an YAML document.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlDocument.#ctor(YamlDotNet.RepresentationModel.YamlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:YamlDotNet.RepresentationModel.YamlDocument"/> class.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlDocument.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:YamlDotNet.RepresentationModel.YamlDocument"/> class with a single scalar node.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlDocument.#ctor(YamlDotNet.Core.EventReader)">
            <summary>
            Initializes a new instance of the <see cref="T:YamlDotNet.RepresentationModel.YamlDocument"/> class.
            </summary>
            <param name="events">The events.</param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.YamlDocument.Accept(YamlDotNet.RepresentationModel.IYamlVisitor)">
            <summary>
            Accepts the specified visitor by calling the appropriate Visit method on it.
            </summary>
            <param name="visitor">
            A <see cref="T:YamlDotNet.RepresentationModel.IYamlVisitor"/>.
            </param>
        </member>
        <member name="P:YamlDotNet.RepresentationModel.YamlDocument.RootNode">
            <summary>
            Gets or sets the root node.
            </summary>
            <value>The root node.</value>
        </member>
        <member name="P:YamlDotNet.RepresentationModel.YamlDocument.AllNodes">
            <summary>
            Gets all nodes from the document.
            </summary>
        </member>
        <member name="T:YamlDotNet.RepresentationModel.YamlDocument.AnchorAssigningVisitor">
            <summary>
            Visitor that assigns anchors to nodes that are referenced more than once but have no anchor.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.ReflectionUtility.HasDefaultConstructor(System.Type)">
            <summary>
            Determines whether the specified type has a default constructor.
            </summary>
            <param name="type">The type.</param>
            <returns>
            	<c>true</c> if the type has a default constructor; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:YamlDotNet.RepresentationModel.Serialization.StreamFragment">
            <summary>
            An object that contains part of a YAML stream.
            </summary>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.StreamFragment.YamlDotNet#RepresentationModel#IYamlSerializable#ReadYaml(YamlDotNet.Core.Parser)">
            <summary>
            Reads this object's state from a YAML parser.
            </summary>
            <param name="parser"></param>
        </member>
        <member name="M:YamlDotNet.RepresentationModel.Serialization.StreamFragment.YamlDotNet#RepresentationModel#IYamlSerializable#WriteYaml(YamlDotNet.Core.Emitter)">
            <summary>
            Writes this object's state to a YAML emitter.
            </summary>
            <param name="emitter"></param>
        </member>
        <member name="P:YamlDotNet.RepresentationModel.Serialization.StreamFragment.Events">
            <summary>
            Gets or sets the events.
            </summary>
            <value>The events.</value>
        </member>
    </members>
</doc>
